// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int         @id @default(autoincrement())
  name          String  
  email         String      @unique
  password      String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  profile       Profile?
  waterTrack    WaterTrack[]
  process       Process[]

  @@index([email])
}

model Profile {
  id                    Int         @id @default(autoincrement())
  user                  User        @relation(fields: [userId], references: [id])
  userId                Int         @unique
  industry              String
  logo                  String      @default("http://res.cloudinary.com/testuse/image/upload/v1721244441/gspvbkhy7uuugtcudnxb.jpg")
  address               String
  phoneNum              String      @db.VarChar(20)
  websiteURL            String
  gstNumber             String?     @db.VarChar(15)
  certification         String
  registrationNum       String?     @db.VarChar(10)
  taxNum                String?     @db.VarChar(20)
  sourceOfWater         String
  employeeName          String
  designation           String
  contactNum            String?     @db.VarChar(20)
  employeeEmail         String
  credit                Int         @default(0)
  createdAt             DateTime    @default(now())
  updatedAt             DateTime    @updatedAt

  @@index([userId])
}

model WaterTrack {
  id                        Int       @id @default(autoincrement())
  user                      User      @relation(fields: [userId], references: [id])
  userId                    Int
  source                    String    @default("")
  waterReceived             Decimal   @db.Decimal(10,2) @default(0)
  waterUsed                 Decimal   @db.Decimal(10,2) @default(0)
  isActive                  Boolean   @default(true)
  description               String?
  createdAt                 DateTime  @default(now())
  updatedAt                 DateTime  @updatedAt

  @@unique([userId, source])
  @@index([userId])
}

model Process{
  id                        Int         @id @default(autoincrement())
  user                      User        @relation(fields: [userId], references: [id])
  userId                    Int
  processName               String
  sourceInput               String
  sourceOutput              String
  waterTransfer             Decimal
  processCredit             Int

  createdAt                 DateTime    @default(now())
  updatedAt                 DateTime    @updatedAt

  @@unique([userId, processName])
  @@index([userId])
}